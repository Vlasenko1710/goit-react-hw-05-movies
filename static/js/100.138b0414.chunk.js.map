{"version":3,"file":"static/js/100.138b0414.chunk.js","mappings":"+PAIe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,+GAEaC,EAAAA,GAAcJ,GAF3B,gBAEFF,EAFE,EAEFA,KACRC,EAAQD,GAHE,gDAKVO,QAAQC,IAAR,MALU,yDAAH,qDAQXH,GACD,GAAE,CAACH,KAEF,yBACGF,EAAKS,QACJ,wBACGT,EAAKU,KAAI,SAAAC,GAAI,iBACZ,2BACE,gBACEC,IACED,EAAKE,aAAL,6CAC0CF,EAAKE,cAD/C,wCAIFC,IAAKH,EAAKI,UAAYJ,EAAKI,UAAYJ,EAAKK,cAC5CC,MAAM,SAER,4BACE,oCACA,8CAAON,EAAKO,YAAZ,QAAoBP,EAAKK,qBAAzB,QAA0C,UAC1C,yCACA,4BACG,IACAL,EAAKI,UACFJ,EAAKI,UADR,UAEGJ,EAAKK,qBAFR,QAEyB,oBAlBvBL,EAAKQ,QADF,OA0BhB,uCAIP,C,+LClDKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBG,EADsB,yBAErBA,EAAIC,MAFiB,2CAAH,qDAKdC,EAAa,mCAAG,WAAMC,GAAN,uFACTL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IADzB,cACrBG,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,sDAKbG,EAAgB,mCAAG,WAAMC,GAAN,uFACZP,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BQ,IAFd,cACxBL,EADwB,yBAIvBA,EAAIC,MAJmB,2CAAH,sDAOhBK,EAAS,mCAAG,WAAMH,GAAN,uFACLL,EAAAA,EAAAA,IAAA,iBACNK,EADM,4BACgBN,EADhB,oBADK,cACjBG,EADiB,yBAIhBA,EAAIC,MAJY,2CAAH,sDAOTM,EAAY,mCAAG,WAAMJ,GAAN,uFACRL,EAAAA,EAAAA,IAAA,iBACNK,EADM,4BACgBN,EADhB,2BADQ,cACpBG,EADoB,yBAInBA,EAAIC,MAJe,2CAAH,qD","sources":["components/Cast/Cast.js","search/SearchApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'search/SearchApi';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { cast } = await API.castMovie(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [movieId]);\n  return (\n    <div>\n      {cast.length ? (\n        <ul>\n          {cast.map(item => (\n            <li key={item.cast_id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : `https://picsum.photos/200/300?random}`\n                }\n                alt={item.character ? item.character : item.original_name}\n                width=\"150\"\n              />\n              <div>\n                <span>Name</span>\n                <span>{item.name ?? item.original_name ?? 'Name'}</span>\n                <span>Character</span>\n                <span>\n                  {' '}\n                  {item.character\n                    ? item.character\n                    : item.original_name ?? 'Character'}\n                </span>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No results</p>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09399571fb2c59022a6ba0c47cedc11c';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","fetch","API","console","log","length","map","item","src","profile_path","alt","character","original_name","width","name","cast_id","API_KEY","axios","searchTrending","res","data","searchMovieId","id","searchMovieTitle","title","castMovie","reviewsMovie"],"sourceRoot":""}