{"version":3,"file":"static/js/663.1ffab4ae.chunk.js","mappings":"mSAEaA,EAAWC,EAAAA,GAAAA,GAAH,0JAURC,EAAaD,EAAAA,GAAAA,GAAH,yQAaVE,EAAoBF,EAAAA,GAAAA,IAAH,+IAQjBG,EAAWH,EAAAA,GAAAA,KAAH,6CAIRI,EAAWJ,EAAAA,GAAAA,KAAH,0G,SChCN,SAASK,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,+GAEaC,EAAAA,GAAcJ,GAF3B,gBAEFF,EAFE,EAEFA,KACRC,EAAQD,GAHE,gDAKVO,QAAQC,IAAR,MALU,yDAAH,qDAQXH,GACD,GAAE,CAACH,KAEF,yBACGF,EAAKS,QACJ,SAACjB,EAAD,UACGQ,EAAKU,KAAI,SAAAC,GAAI,iBACZ,UAACjB,EAAD,YACE,gBACEkB,IACED,EAAKE,aAAL,6CAC0CF,EAAKE,cAD/C,wCAIFC,IAAKH,EAAKI,UAAYJ,EAAKI,UAAYJ,EAAKK,cAC5CC,MAAM,SAER,UAACtB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,8BAAWc,EAAKO,YAAhB,QAAwBP,EAAKK,qBAA7B,QAA8C,UAC9C,SAACpB,EAAD,yBACA,UAACC,EAAD,WACG,IACAc,EAAKI,UACFJ,EAAKI,UADR,UAEGJ,EAAKK,qBAFR,QAEyB,oBAlBfL,EAAKQ,QADV,OA0BhB,SAAC,KAAD,0BAIP,C,kNCpDYC,EAAgB3B,EAAAA,GAAAA,IAAH,8FAMb4B,EAAa5B,EAAAA,GAAAA,GAAH,4HAQV6B,EAAS7B,EAAAA,GAAAA,GAAH,qNAWN8B,EAAgB9B,EAAAA,GAAAA,IAAH,8GAOb+B,EAAS/B,EAAAA,GAAAA,KAAH,gGAMNgC,EAAWhC,EAAAA,GAAAA,EAAH,uF,mMCrCfiC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBG,EADsB,yBAErBA,EAAIC,MAFiB,2CAAH,qDAKdC,EAAa,mCAAG,WAAMC,GAAN,uFACTL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IADzB,cACrBG,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,sDAKbG,EAAgB,mCAAG,WAAMC,GAAN,uFACZP,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BQ,IAFd,cACxBL,EADwB,yBAIvBA,EAAIC,MAJmB,2CAAH,sDAOhBK,EAAS,mCAAG,WAAMH,GAAN,uFACLL,EAAAA,EAAAA,IAAA,iBACNK,EADM,4BACgBN,EADhB,oBADK,cACjBG,EADiB,yBAIhBA,EAAIC,MAJY,2CAAH,sDAOTM,EAAY,mCAAG,WAAMJ,GAAN,uFACRL,EAAAA,EAAAA,IAAA,iBACNK,EADM,4BACgBN,EADhB,2BADQ,cACpBG,EADoB,yBAInBA,EAAIC,MAJe,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Reviews/Reviews.styled.js","search/SearchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastPerson = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0px 0px 4px #242424;\n  max-width: 150px;\n  color: #242424;\n  font-size: 14px;\n`;\n\nexport const CastTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 10px;\n`;\n\nexport const CastDesr = styled.span`\n  font-weight: 300;\n`;\n\nexport const CastName = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  margin: 5px 0;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'search/SearchApi';\nimport { NoResult } from 'components/Reviews/Reviews.styled';\nimport { CastList, CastPerson, CastTextContainer, CastDesr, CastName } from './Cast.styled';\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { cast } = await API.castMovie(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [movieId]);\n  return (\n    <div>\n      {cast.length ? (\n        <CastList>\n          {cast.map(item => (\n            <CastPerson key={item.cast_id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : `https://picsum.photos/200/300?random}`\n                }\n                alt={item.character ? item.character : item.original_name}\n                width=\"150\"\n              />\n              <CastTextContainer>\n                <CastDesr>Name</CastDesr>\n                <CastName>{item.name ?? item.original_name ?? 'Name'}</CastName>\n                <CastDesr>Character</CastDesr>\n                <CastName>\n                  {' '}\n                  {item.character\n                    ? item.character\n                    : item.original_name ?? 'Character'}\n                </CastName>\n              </CastTextContainer>\n            </CastPerson>\n          ))}\n        </CastList>\n      ) : (\n        <NoResult>No results</NoResult>\n      )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n  max-width: 100%;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  box-shadow: 0px 0px 4px #242424;\n  overflow: hidden;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const TextContainer = styled.div`\n  padding: 0 20px 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Author = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const NoResult = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n`;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09399571fb2c59022a6ba0c47cedc11c';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["CastList","styled","CastPerson","CastTextContainer","CastDesr","CastName","Cast","useState","cast","setCast","movieId","useParams","useEffect","fetch","API","console","log","length","map","item","src","profile_path","alt","character","original_name","width","name","cast_id","ReviewWrapper","ReviewList","Review","TextContainer","Author","NoResult","API_KEY","axios","searchTrending","res","data","searchMovieId","id","searchMovieTitle","title","castMovie","reviewsMovie"],"sourceRoot":""}